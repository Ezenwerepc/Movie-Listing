{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ezenwerepc\\\\Desktop\\\\react-complete-guide\\\\Add Movies and Movies List\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [addMovieIsShown, setAddMovieIsShown] = useState(false);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://my-database-78a03-default-rtdb.firebaseio.com/movies.json');\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const data = await response.json();\n      const loadedMovies = [];\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].newDate().getMonth()\n        });\n      }\n\n      //const transformedMovies = data.results.map((movieData) => {\n      //return {\n      //id: movieData.episode_id,\n      //title: movieData.title,\n      //openingText: movieData.opening_crawl,\n      //releaseDate: movieData.release_date,\n      //};\n      //});\n      setMovies(loadedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n  async function addMovieHandler(movie) {\n    const response = await fetch('https://my-database-78a03-default-rtdb.firebaseio.com/movies.json', {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n  const hideAddMovieHandler = props => {\n    setAddMovieIsShown(!addMovieIsShown);\n  };\n  const addNewMovieHandler = () => {\n    setAddMovieIsShown(true);\n  };\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no movies.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 17\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: addMovieIsShown && /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler,\n        onClose: hideAddMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 8\n      }, this), !addMovieIsShown && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewMovieHandler,\n        children: \" AddNew Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"j7vtZwo+ZQ4PkwuwhrQqM7ZQej4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","MoviesList","AddMovie","App","props","movies","setMovies","isLoading","setIsLoading","error","setError","addMovieIsShown","setAddMovieIsShown","fetchMoviesHandler","response","fetch","ok","Error","data","json","loadedMovies","key","push","id","title","openingText","releaseDate","newDate","getMonth","message","addMovieHandler","movie","method","body","JSON","stringify","headers","console","log","hideAddMovieHandler","addNewMovieHandler","content","length"],"sources":["C:/Users/Ezenwerepc/Desktop/react-complete-guide/Add Movies and Movies List/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\n\n\nfunction App(props) {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [addMovieIsShown, setAddMovieIsShown] = useState(false)\n  \n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://my-database-78a03-default-rtdb.firebaseio.com/movies.json');\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      const loadedMovies = [];\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].newDate().getMonth(),\n          \n        });\n      }\n\n      //const transformedMovies = data.results.map((movieData) => {\n        //return {\n          //id: movieData.episode_id,\n          //title: movieData.title,\n          //openingText: movieData.opening_crawl,\n          //releaseDate: movieData.release_date,\n        //};\n      //});\n      setMovies(loadedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n\n  async function addMovieHandler(movie) {\n  const response = await fetch('https://my-database-78a03-default-rtdb.firebaseio.com/movies.json', {\n      method: 'POST', \n      body:JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n  });\n  const data = await response.json();\n  console.log(data);\n  }\n  \n  const hideAddMovieHandler = (props) => {\n    setAddMovieIsShown(!addMovieIsShown);\n  }\n\n  const addNewMovieHandler = () => {\n    setAddMovieIsShown(true)\n    \n  }\n    \n  \n\n  let content = <p>Found no movies.</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        {addMovieIsShown&& <AddMovie onAddMovie={addMovieHandler} onClose={hideAddMovieHandler}/>}\n\n      </section>\n      <section>\n       <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n       {!addMovieIsShown && <button onClick={addNewMovieHandler}> AddNew Movie</button>}\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}